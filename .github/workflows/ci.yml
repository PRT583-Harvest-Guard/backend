# CI / CD – build and release only after code lands on `main`
# ----------------------------------------------------------
# * No action for branches or pull-requests
# * On every push to `main`:
#     – (optional) run unit tests
#     – build & push Docker image to the registry
#     – (optional) SSH deploy

name: Build & Push Docker (main only)

###############################################################################
# Trigger: run ONLY on commits that reach `main`
###############################################################################
on:
  push:
    branches: [ main ]

###############################################################################
# Job – test (optional) + build + push + (optional) deploy
###############################################################################
jobs:
  build:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: web-backend
      IMAGE_TAG: ${{ github.sha }}        # immutable, maps to this commit

    steps:
    # 1. Fetch repository code
    - name: Checkout source
      uses: actions/checkout@v4

    # 2. (Optional) run unit tests – comment out if not needed
    - name: Set up Python & run tests
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Install deps and execute pytest
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pytest -q

    # 3. Log in to registry (GHCR by default; swap registry if using Docker Hub)
    - name: Log in to container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_TOKEN }}

    # 4. Build and push two tags: <commit-hash> and latest
    - name: Build & push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ secrets.REGISTRY_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          ghcr.io/${{ secrets.REGISTRY_USERNAME }}/${{ env.IMAGE_NAME }}:latest

    # 5. (Optional) zero-downtime deploy via SSH – enable when server is ready
    # - name: Deploy to VPS
    #   if: secrets.SSH_HOST != ''
    #   uses: appleboy/ssh-action@v1.0.3
    #   with:
    #     host: ${{ secrets.SSH_HOST }}
    #     username: ${{ secrets.SSH_USER }}
    #     key: ${{ secrets.SSH_PRIVATE_KEY }}
    #     script: |
    #       cd /opt/yourapp
    #       docker compose pull
    #       docker compose up -d --remove-orphans
